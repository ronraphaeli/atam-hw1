.global main
.section .data
arr: .short 6, 0xEA, 0x22, 0x4B1D, 0b1010
buff: .fill 10, 2, 0x42
id: .long 0x19283746
key: .quad 0x0406282309052021
.section .bss
.lcomm a, 8
.lcomm b, 4
.section .text
main:
    xor %rcx, %rcx
    movl $0x5432, %ebx
    movb $4, %bl
    xor %rax, %rax
    xor %rsi, %rsi
     
    lea arr(%rip), %rbx
    lea buff(%rip), %rbx
    movb 4(%rbx), %al
    
    movb 7(%rbx), %al
    lea (arr), %rbx
    mov %bh, %al
    xor %al, %sil
    mov $5, %rsi
    movw -4(%rbx, %rsi, 2), %dx
    shl $1, %rsi
    movb $0x68, b
    lea (%rbx, %rsi, 2), %rcx
    movb (%rcx),%cl
    addb %cl, b
    mov $b, %rcx
    movq (%rcx), %rcx
    
    mov $0xFFFF00, %rax
    shr $8, %rax
    inc %ax
    
    movw arr+3, %ax
    ror $2, %ax
    
    xor %ax, %ax
    
    
    mov $a, %rcx
    lea key, %rbx
    movq (%rbx), %rbx
    mov $0x40, %si
    dec %rcx
    movl %ebx, 2(%rcx)
    
    mov $a, %rcx
    movq (%rcx), %rcx
    
    movb $78, b
    mov $a, %rcx
    movq (%rcx), %rcx
    
    movq $arr, b
    mov $b, %rcx
    movq (%rcx), %rcx
    
    movl $0xdeadbeef, b
    movswq (b), %rdx
    
    movq $arr, b
    movswq (b), %rdx
    
    mov $0xAAAA, %ax
    cwd
    
    xor %rcx, %rcx
    movw $-0x9F, a
    mov $a, %rcx
    movw (%rcx), %cx
    
    
    idivw a
    
    movq $0x123, (b)
    mov $b, %rcx
    movq (%rcx), %rcx
    
    imul $3, b, %rdx
    
    xor %rax, %rax
    mov $0xfc, %ax
    mov $4, %bl
    
    mov $015, %rdx
    imulb %bl
    ret
